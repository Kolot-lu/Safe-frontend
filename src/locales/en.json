{
  "title": "Hello in English",
  "pages": {
    "home": {
      "title": "Dashboard"
    },
    "create_project": {
      "title": "Create a New Project",
      "fields": {
        "executor": {
          "executor": "Executor Wallet Address",
          "executor_placeholder": "0123..."
        },
        "platform_fee": {
          "platform_fee": "Platform Fee (%)",
          "platform_fee_placeholder": "Example: 5 for 5%",
          "platform_fee_description": "The platform fee is the percentage of the total amount that the platform will take as a fee. 1% Minimum."
        },
        "milestone": {
          "milestones": "Milestones",
          "milestone_amount": "Milestone Amount (%)",
          "milestone_amount_placeholder": "Example: 50 for 50%",
          "enter_percentage": "Enter percentage",
          "milestone_amount_aria": "Milestone Amount",
          "remove_milestone": "Remove Milestone",
          "add_milestone": "Add Milestone"
        },
        "token_address": {
          "token_address": "Token Address",
          "token_address_placeholder": "0x0123..."
        },
        "total_amount": "Total Amount",

        "conversions": "Conversions",
        "fee_explanation": "You entered a platform fee of {{fee}}%. The contract expects 100 = 1%, so for example, 5% = 500.",
        "calculated_fee": "Calculated Fee",
        "net_amount": "Net Amount (after fee)",
        "milestone_value": "Milestone Value",
        "total_milestone_percent": "Total Milestone Percentage",
        "enter_percentage": "Enter percentage"
      },
      "actions": {
        "submit": "Create Project",
        "submitting": "Submitting...",
        "remove": "Remove"
      },
      "errors": {
        "invalid_input": "Please fill out all fields correctly.",
        "generic": "Something went wrong. Please try again.",
        "fee_too_low": "Platform fee is too low. Minimum is 1% (100).",
        "no_contract_service": "No contract service is available.",
        "no_signer": "No signer connected.",
        "sum_not_100": "The total percentage of milestones must equal 100%.",
        "executor_required": "Executor address is required.",
        "token_address_required": "Token address is required.",
        "total_amount_required": "Total amount is required.",
        "total_amount_positive": "Total amount must be positive.",
        "platform_fee_required": "Platform fee is required.",
        "platform_fee_positive": "Platform fee must be positive.",
        "milestones_required": "At least one milestone is required.",
        "milestone_percentage_required": "Milestone percentage is required.",
        "milestone_invalid_percentage_format": "Milestone percentage must be a number."
      },
      "success": "Project created successfully!"
    }
  },
  "components": {
    "header": {
      "main_header": {
        "accessibility": {
          "logotype": {
            "link_label": "Go to the home page",
            "logo_label": "Safe project logotype"
          },
          "open_menu": "Open main menu"
        }
      }
    },
    "language_switcher": {
      "accessibility": {
        "label": "Switch to {{language}} language",
        "switch_language": "Switch language. Current language: {{language}}"
      }
    },
    "layouts": {
      "main": {
        "footer": {
          "accessibility": {
            "label": "Site footer"
          }
        },
        "header": {
          "accessibility": {
            "label": "Site header"
          }
        }
      }
    },
    "connect_wallet": {
      "metamask": {
        "label": "MetaMask",
        "accessibility": {
          "label": "Connect with MetaMask"
        }
      },
      "tronweb": {
        "label": "TronLink",
        "warnings": {
          "in_development": "The tron ​​wallet is still in development."
        },
        "accessibility": {
          "label": "Connect with TronLink (in development)"
        }
      },
      "accessibility": {
        "connect": "Open wallet connection options"
      },
      "connect": "Connect"
    },
    "input": {
      "errors": {
        "required": "This field is required",
        "invalid": "Invalid input"
      }
    }
  },
  "wallets": {
    "tronweb": {
      "errors": {
        "not_installed": "TronLink is not installed or not ready!"
      },
      "warnings": {
        "disconnected": "TronLink is disconnected!",
        "account_disconnected": "TronLink account is disconnected!"
      },
      "notifications": {
        "connected": "Connected to TronLink with account: {account}",
        "account_changed": "TronLink account changed to: {account}",
        "restored_connection": "TronLink connection restored with account: {{account}}"
      }
    },
    "metamask": {
      "errors": {
        "not_installed": "MetaMask is not installed!",
        "connection_failed": "Failed to connect to MetaMask!",
        "connection_error": "MetaMask connection error: {{error}}",
        "unknown_error": "Unknown MetaMask connection error"
      },
      "warnings": {
        "disconnected": "MetaMask is disconnected!",
        "account_disconnected": "MetaMask account is disconnected!",
        "no_accounts": "No Ethereum accounts found!"
      },
      "notifications": {
        "connected": "Connected to ethereum by MetaMask with account: {{account}}"
      }
    }
  },
  "blockchain_provider": {
    "errors": {
      "no_provider": "BlockchainProvider is not provided!",
      "missing_provider": "{{network}} provider is missing"
    },
    "warnings": {
      "invalid_provider_state": "Invalid provider state, calling resetConnection"
    },
    "notifications": {
      "restoring_connection": "Restoring connection to blockchain.., {{account}}"
    }
  },
  "hooks": {
    "use_blockchain": {
      "errors": {
        "no_provider": "useBlockchain must be used within a BlockchainProvider!"
      }
    }
  }
}
